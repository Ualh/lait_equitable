# Data

```{r, echo = FALSE, message = FALSE}
source(here::here("scripts/setup.R"))
```

* Sources
* Description
* Wrangling/cleaning
* Spotting mistakes and missing data (could be part of EDA too)
* Listing anomalies and outliers (could be part of EDA too)

## Load datasets
```{r}
library(data.table)

file_path <- "../data/"

#df_producteur <- fread(paste0(file_path, "Producteur_lait_Donnes_17_03_2024 15_57_31.csv"))

df_producteur <- read_excel(paste0(file_path, "lait_cru_producteur.xlsx"), sheet = 1)
```

## Description
```{r}
df_producteur$date <- as.Date(df_producteur$date)
 library(kableExtra)
# Create a tibble with variable descriptions for df_producteur
variable_table <- tibble(
  Variable = c("Date", "prix_bio", "prix_non_bio", "delta", "Delta_pourcent"),
  Description = c(
    "The date when the prices were recorded, in a year-month-day format.",
    "The recorded price of organic milk on the given date.",
    "The recorded price of non-organic milk on the given date.",
    "The absolute difference between the organic and non-organic milk prices.",
    "The percentage difference between the organic and non-organic milk prices."
  )
)

# Display the table using kableExtra
variable_table %>%
  kbl() %>%
  kable_styling(position = "center", bootstrap_options = c("striped", "bordered", "hover", "condensed"))

```


## Map
```{python}
import pandas as pd
import os

# Define the path to your xlsb file
file_path = os.path.join("data", "Produits laitiers Ã©quitables - 2023.xlsb")

# Use pyxlsb to open the file and read it into a pandas dataframe
# Adjust the sheet name as necessary
df = pd.read_excel(file_path, engine='pyxlsb', sheet_name='Par SM')

# Remove the first five rows
df = df.iloc[6:]
```